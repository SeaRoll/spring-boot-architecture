spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  flyway:
    enabled: true
  threads:
    virtual:
      enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: my-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      enable-auto-commit: false
    listener:
      ack-mode: manual_immediate
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: ${OAUTH_GITHUB_CLIENT_ID:GITHUB_CLIENT_ID}
            clientSecret: ${OAUTH_GITHUB_CLIENT_SECRET:GITHUB_CLIENT_SECRET}
            scope: read:user,user:email

app:
  jwt:
    key: 5pAq6zRyX8bC3dV2wS7gN1mK9jF0hL4tUoP6iBvE3nG8xZaQrY7cW2fA # according to SHA-256 requirements
    algorithm: HS256
    issuer: http://localhost:8080
    expiresIn: P1D

  fe-base-url: http://localhost:8080